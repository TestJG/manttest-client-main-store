// Generated by dts-bundle v0.5.0
// Dependencies for this module:
//   ../rxjs/Observable
//   ../rxstore
//   ../manttest-client-app-store
//   ../manttest-client-login-store

declare module 'manttest-client-main-store' {
	export * from "manttest-client-main-store/index";
}

declare module 'manttest-client-main-store/index' {
	export * from "manttest-client-main-store/store";
}

declare module 'manttest-client-main-store/store' {
	import { Observable } from "rxjs/Observable";
	import "rxjs/add/observable/of";
	import "rxjs/add/observable/empty";
	import "rxjs/add/observable/merge";
	import "rxjs/add/operator/distinctUntilChanged";
	import "rxjs/add/operator/filter";
	import "rxjs/add/operator/map";
	import "rxjs/add/operator/switchMap";
	import "rxjs/add/operator/startWith";
	import "rxjs/add/operator/observeOn";
	import "rxjs/add/operator/subscribeOn";
	import "rxjs/add/operator/debounceTime";
	import "rxjs/add/operator/timeout";
	import { TypedActionDescription, EmptyActionDescription, Store, ICreateStoreOptions, Action } from "rxstore";
	import { AppStore } from "manttest-client-app-store";
	import { LoginStore, LoginService } from "manttest-client-login-store";
	export interface MainState {
		viewMode: MainViewMode;
		loginStore: LoginStore | null;
		appStore: AppStore | null;
	}
	export enum MainViewMode {
		Login = 0,
		App = 1,
	}
	export interface MainEvents {
	}
	export const MainActions: {
		setViewMode: TypedActionDescription<MainState, MainViewMode>;
		createLogin: TypedActionDescription<MainState, LoginStore>;
		createApp: TypedActionDescription<MainState, AppStore>;
		destroyLogin: EmptyActionDescription<MainState>;
		destroyApp: EmptyActionDescription<MainState>;
	};
	export type MainStore = Store<MainState> & MainEvents;
	export const defaultMainState: (loginService: LoginService) => MainState;
	export const loginCompletedEffects: (store: MainStore) => Observable<Action>;
	export const logOutEffects: (loginService: LoginService) => (store: MainStore) => Observable<Action>;
	export const createMainStore: (Services: any[]) => (options?: ICreateStoreOptions<MainState> | undefined) => MainStore;
}

